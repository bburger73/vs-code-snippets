{
	// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $$$$$$1, $$$$2 for tab stops, $$$$0 for the final cursor position, and $$$${1:label}, $$$${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$$$$1');",
	// 		"$$$$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"builds core visible php": {
		"prefix": "<?p",
		"body": [
		  "",
		  "    $$root = realpath($$_SERVER[\"DOCUMENT_ROOT\"]);    ",
		  "    $$breakPath = __DIR__;",
		  "    $$coretest = substr($$breakPath,strlen($$root));",
		  "    $$size = strpos($$coretest,'php');",
		  "    $$core = substr($$coretest,0,$$size);",
		  "",
		  "    require_once $$root . $$core . 'login.php';",
		  "    $$conn = new mysqli($$hn, $$un, $$pw, $$db);",
		  "    if($$conn->connect_error) die(\"Can't Connect\");",
		  "",
		  "echo<<<__END",
		  "<!DOCTYPE html>",
		  "<html lang='en-US'>",
		  "    <head>",
		  "        <link rel=\"stylesheet\" type=\"text/css\" title=\"main\" href=\"style.css\">",
		  "        <link rel=\"stylesheet\" type=\"text/css\" title=\"main\" href=\"media.css\">",
		  "        <meta charset=\"UTF-8\">",
		  "        <title>$1</title>",
		  "        <script></script>",
		  "        <meta name=\"content\" content=\"\">",
		  "        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
		  "    </head>",
		  "    <body>",
		  "        <header>",
		  "            ",
		  "        </header>",
		  "        <main>",
		  "            <h1>$2</h1>",
		  "            $4",
		  "        </main>",
		  "        <aside>",
		  "",
		  "        </aside>",
		  "        <footer>",
		  "            <small>&copy</small>",
		  "        </footer>",
		  "    </body>",
		  "</html>",
		  "__END;",
		  "$3",
		  "?>",
		  ""
		],
		"description": "builds core visible php"
	  },

	"echo build for php": {
		"prefix": "echo<",
		"body": [
		  "echo<<<__END",
		  "    $1",
		  "__END;"
		],
		"description": "echo build for php"
	  },
	  "Timestamp for Mysql timestamp type":{
		"prefix": "$ts",
		"body": [
			"$$tstamp = date('Y-m-d H:i:s');",
			"$0"
		],
		"description": "timestamp method ish"
	  },
	  "Makes a label":{
		"prefix": "<la",
		"body": "<label for='$1'>$0</lable>",
		"description": "Label Builder"
	  },
	  "Makes an Input":{
		"prefix": "<in",
		"body": "<label for='$0'>$1</lable><input id='$0' name='$0' placeholder='$2' />",
		"description": "Input Builder"
	  },
	  "builds core userDashboard": {
		"prefix": "dash",
		"body": [
		  "    $$root = realpath($$_SERVER[\"DOCUMENT_ROOT\"]);    ",
		  "    $$breakPath = __DIR__;",
		  "    $$coretest = substr($$breakPath,strlen($$root));",
		  "    $$size = strpos($$coretest,'php');",
		  "    $$core = substr($$coretest,0,$$size);",
		  "",
		  "    require_once 'login.php';",
		  "    $$conn = new mysqli($$hn, $$un, $$pw, $$db);",
		  "    if($$conn->connect_error) die(\"Can't Connect\");",
		  "",
		  "    $$userName = $$_GET['email'];",
		  "    $$password = $$_GET['password'];",
		  "    $$keepMeLoggedIn = $$_GET['keepMeLoggedIn'];",
		  "",
		  "echo<<<__END",
		  "<!DOCTYPE html>",
		  "<html lang='en'>",
		  "    <head>",
		  "        <link rel=\"stylesheet\" type=\"text/css\" title=\"main\" href=\"style.css\">",
		  "        <link rel=\"stylesheet\" type=\"text/css\" title=\"main\" href=\"media.css\">",
		  "        <meta charset=\"UTF-8\">",
		  "        <title></title>",
		  "        <script></script>",
		  "        <meta name=\"content\" content=\"\">",
		  "        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
		  "    </head>",
		  "    <body>",
		  "        <header>",
		  "            <h1>$$userName</h1>",
		  "        </header>",
		  "        <main>",
		  "            <h2>$$password</h2>",
		  "            <h3>$$keepMeLoggedIn</h3>",
		  "        </main>",
		  "        <aside>",
		  "",
		  "        </aside>",
		  "        <footer>",
		  "            <small>&copy</small>",
		  "        </footer>",
		  "    </body>",
		  "</html>",
		  "__END;",
		  ""
		],
		"description": "builds core userDashboard"
	  },"mysql call for prepared statements": {
		"prefix": "$que",
		"body": [
		  "$$query = '$1';",
		  "$$stmt = $$conn->prepare($$query);",
		  "$$stmt->bind_param('$2',$3);",
		  "//$3",
		  "$$result = $$stmt->execute();",
		  "$$stmt->close();",
		  ""
		],
		"description": "mysql call for prepared statements"
	  },"Quick stdClass maker": {
		"prefix": "$hol",
		"body": [
		  "$$hold = new stdClass();",
		  "$$hold->$1 = $$1;",
		  "$$hold->$2 = $$2;",
		  "$$hold->$3 = $$3;",
		  "$$hold->$4 = $$4;",
		  "$$hold->$5 = $$5;",
		  "$$hold->$6 = $$6;",
		  "$$hold->$7 = $$7;",
		  "$$out[] = $$hold;"
		],
		"description": "Quick stdClass maker"
	  },"insert query builder": {
		"prefix": "inser",
		"body": [
		  "    $$query = 'insert into $1 values($2)';",
		  "    $$stmt = $$conn->prepare($$query);",
		  "    $$stmt->bind_param('$4',$3);",
		  "    $5                          ",
		  "    $$result = $$stmt->execute();",
		  "    if($$result)",
		  "    {",
		  "        echo \"success\";",
		  "    }else{",
		  "        echo \"failed\";",
		  "    }"
		],
		"description": "insert query builder"
	  },"Select Query Array": {
		"prefix": "selec",
		"body": [
		  "    $$out = array();",
		  "    $$query = 'select $1 from droplets where $2';",
		  "    $$stmt = $$conn->prepare($$query);",
		  "    $$stmt->bind_param('$4',$3);",
		  "    $5",
		  "    $$stmt->bind_result($1);",
		  "    $$result = $$stmt->execute();",
		  "    while($$stmt->fetch())",
		  "    {",
		  "        $$hold = new stdClass();",
		  "        $$hold->$6 = $6;",
		  "        $$hold->$7 = $7;",
		  "        $$hold->$8 = $8;",
		  "        $$hold->$9 = $9;",
		  "        $$hold->$10 = $10;",
		  "        $$hold->$11 = $11;",
		  "        $$out[] = $$hold;",
		  "    }",
		  "$$stmt->close();",
		  "    if($$result)",
		  "    {",
		  "        return $$out;",
		  "    }else{",
		  "         echo \"failed\";   ",
		  "    }"
		],
		"description": "Select Query Array"
	  },"Database access from login file": {
		"prefix": "logi",
		"body": [
		  "require_once './../login.php';",
		  "$$conn = new mysqli($$hn, $$un, $$pw, $$db);",
		  "if($$conn->connect_error) die(\"Can't Connect\");",
		  ""
		],
		"description": "Database access from login file"
	  },"bind result full stub out": {
		"prefix": "$bind_result",
		"body": [
		  "$$out = array();",
		  "$$stmt->bind_result($$1,$$2,$$3,$$4,$$5,$$6,$$7);",
		  "while($$stmt->fetch())",
		  "{",
		  "    $$hold = new stdClass();",
		  "    $$hold->$1 = $$1;",
		  "    $$hold->$2 = $$2;",
		  "    $$hold->$3 = $$3;",
		  "    $$hold->$4 = $$4;",
		  "    $$hold->$5 = $$5;",
		  "    $$hold->$6 = $$6;",
		  "    $$hold->$7 = $$7;",
		  "    $$out[] = $$hold;",
		  "}",
		  "$$stmt->close();",
		  "if($$result)",
		  "{",
		  "    http_response_code(200);",
		  "    return $$out;",
		  "}else{",
		  "    http_response_code(400);",
		  "    return false;",
		  "}"
		],
		"description": "bind result full stub out"
	  },"Log file snippet": {
		"prefix": "log",
		"body": [
		  "$$log = fopen('log.json','w');",
		  "fwrite($$log,$1);",
		  "fclose($$log);"
		],
		"description": "Log file snippet"
	  }
}