{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Adds a full import": {
		"prefix": "impo",
		"body": [
		  "import {$1} from '$2.js';"
		],
		"description": "Import for the top of js."
	  },"Initializes React Component": {
		"prefix": "import Rea",
		"body": [
		  "import React from 'react';",
		  "import \"./$0.css\";",
		  "",
		  "",
		  "class $0 extends React.Component {",
		  "    render() {",
		  "        const multiplesInDiv = (",
		  "            $1",
		  "        );",
		  "",
		  "        return multiplesInDiv;",
		  "    }",
		  "}",
		  "",
		  "export default $0;"
		],
		"description": "Initializes React Component"
	  },"Generates AJAX For JS": {
		"prefix": "ajax",
		"body": [
			"    $5",
			"    var xmlhttp=new XMLHttpRequest();",
			"    xmlhttp.onreadystatechange=function() {",
			"        if (xmlhttp.readyState==4 && xmlhttp.status==200) {",
			"            $1",
			"        }",
			"    }",
			"    xmlhttp.open(\"GET\",\"$2?$3=\" + $4,true);",
			"    xmlhttp.send();",
			""
		],
		"description": "Generates AJAX For JS"
	  },"Generates AJAX For JS xml": {
		"prefix": "ajax",
		"body": [
		  "    $5",
		  "    var xmlhttp=new XMLHttpRequest();",
		  "    xmlhttp.onreadystatechange=function() {",
		  "        if (xmlhttp.readyState==4 && xmlhttp.status==200) {",
		  "            $1",
		  "        }",
		  "    }",
		  "    xmlhttp.open(\"GET\",\"$2?$3=\" + $4,true);",
		  "    xmlhttp.send();",
		  ""
		],
		"description": "Generates AJAX For JS"
	  },"Initiate a react class": {
		"prefix": "sta",
		"body": [
		  "import React from 'react';",
		  "",
		  "class $1 extends React.Component {",
		  "    constructor(props) {",
		  "        super(props);",
		  "        const gotoPage = this.props.gotoPage;",
		  "        gotoPage(2);",
		  "    }",
		  "    /**must pass school to messenger as userId */",
		  "    ",
		  "    render() {",
		  "    }",
		  "}",
		  "",
		  "",
		  "export default $1;"
		],
		"description": "Initiate a react class"
	  },"new react": {
		"prefix": "react",
		"body": [
		  "import React from 'react';",
		  "",
		  "class $1 extends React.Component {",
		  "  constructor(props){",
		  "    super(props);",
		  "    this.state = {",
		  "",
		  "    }",
		  "  }",
		  "  render() {",
		  "      const multiplesInDiv = (",
		  "        <div></div>",
		  "        );",
		  "",
		  "        return multiplesInDiv;",
		  "    }",
		  "}",
		  "  ",
		  "export default $1;"
		],
		"description": "new react"
	  },"creates fetch call in react": {
		"prefix": "fet",
		"body": [
		  "const requestOptions = {",
		  "        method: \"POST\",",
		  "        headers: { \"Content-Type\": \"application/json\" },",
		  "        body: JSON.stringify({",
		  "          email:inEmail,",
		  "          pass:inPass",
		  "        }),",
		  "      };",
		  "  ",
		  "    fetch(\"\",requestOptions).then(res => res.json()).then(result => {",
		  "        $1",
		  "    });"
		],
		"description": "creates fetch call in react"
	  },"inserts table element stub for react": {
		"prefix": "<tabl",
		"body": [
		  "<table><thead></thead><tbody><tr><td>",
		  "              $1",
		  "            </td><td>",
		  "              $2",
		  "            </td></tr></tbody><tfoot></tfoot></table>"
		],
		"description": "inserts table element stub for react"
	  }
}